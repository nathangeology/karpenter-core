name: kind-e2e
on:
  push:
    branches: [main]
  workflow_dispatch:
jobs:
  kind-e2e:
    permissions:
      issues: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        k8sVersion:  ["1.34.x"] #["1.28.x", "1.29.x", "1.30.x", "1.31.x", "1.32.x", "1.33.x",
        scenario: ["hack/e2e_driver/kubernetes_scenario_1753908801", "hack/e2e_driver/baseline_scenario_small"]
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Verify scenarios exist
      run: |
        echo "Verifying scenario directories exist..."
        for scenario_dir in ${{ matrix.scenario }}; do
          if [ ! -d "$scenario_dir" ]; then
            echo "Error: Scenario directory does not exist: $scenario_dir"
            exit 1
          fi
          echo "âœ“ Found scenario directory: $scenario_dir"
        done
    - name: Set up Python 3.10
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
      with:
        python-version: "3.10"
    - uses: ./.github/actions/install-deps
      with:
          k8sVersion: ${{ matrix.k8sVersion }}
    - name: Setup audit directories
      run: |
        sudo mkdir -p /etc/kubernetes/audit/
        sudo chmod 777 /etc/kubernetes/audit/
        sudo mkdir -p /var/log/kubernetes/audit/
        sudo chmod 777 /var/log/kubernetes/audit/
        cp .github/audit-policy.yaml /etc/kubernetes/audit/audit-policy.yaml
        
    - name: Kind Cluster
      uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
      with:
        config: .github/kind-config.yaml
    - name: check kind cluster and taint nodes
      shell: bash
      run: |
        kubectl config current-context
        kubectl get nodes
        kubectl taint nodes chart-testing-control-plane CriticalAddonsOnly:NoSchedule
    - name: install prometheus 
      uses: ./.github/actions/install-prometheus
    - name: install pyroscope 
      uses: ./.github/actions/install-pyroscope
    - name: install kwok and controller
      shell: bash
      run: |
        make install-kwok
        export KWOK_REPO=kind.local
        export KIND_CLUSTER_NAME=chart-testing
        make apply-with-kind

    - name: ping cluster
      shell: bash
      run: | 
        sleep 15
        kubectl get pods -n kube-system | grep karpenter 
        kubectl get nodepools
        kubectl get pods -A
        kubectl describe nodes
    # TEMPORARILY DISABLED: Karpenter KPI Analysis Package
    # This package analyzes key performance indicators (KPIs) for integration tests.
    # Currently non-functional due to changes in core Karpenter metrics.
    # Disabled due to test flakiness until underlying metric changes are addressed.
    # Reference: https://github.com/nathangeology/karpenter_evaluate/blob/main/main.py
    # - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
    #   with:
    #     repository: nathangeology/karpenter_evaluate
    #     path: ./karpenter_eval/ # Installs to a folder in the Karpenter repo for the test
    #     ref: "1130af927302e6913a4947952112f793eeafc564"
    #     fetch-depth: 0
    # - name: install KPI report dependencies
    #   shell: bash
    #   run: |
    #     pip install pandas==2.2.2
    #     pip install pyarrow==16.1.0 
    #     pip install tabulate==0.9.0
    #     pip install prometheus-api-client==0.5.5
    #     pip install ./karpenter_eval/
    - name: Run Scenario Driver
      env:
        SCENARIO: ${{ matrix.scenario }}
        NAMESPACE: default
        LOG_DIR: ./scenario-logs/${{ matrix.scenario }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
        S3_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        kubectl get pods -A
        kubectl get nodes
        kubectl get nodepools
        ./hack/scenario-driver.sh
    #    - name: run test suites
    #      shell: bash
    #      run: |
    #        OUTPUT_DIR=$(mktemp -d)
    #        export OUTPUT_DIR
    #        echo OUTPUT_DIR="$OUTPUT_DIR" >> "$GITHUB_ENV"
    #        make e2etests
    # - name: run test analysis
    #   shell: bash
    #   run: |
    #     OUTPUT_DIR=${{ env.OUTPUT_DIR }} python ./karpenter_eval/main.py
    - name: cleanup 
      shell: bash
      run: | 
        echo "Cleaning up resources for scenario: ${{ matrix.scenario }}"
        kubectl delete nodepools --all || true
        kubectl delete kwoknodeclasses.karpenter.kwok.sh --all || true
        make delete || true
        make uninstall-kwok || true
